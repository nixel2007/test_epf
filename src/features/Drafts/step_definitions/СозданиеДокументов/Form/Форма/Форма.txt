//начало текста модуля#Область Служебные_функции_и_процедуры&НаКлиенте// контекст фреймворка Vanessa-BehaviorПерем Ванесса; &НаКлиенте// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.Перем Контекст Экспорт; &НаКлиенте// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.Перем КонтекстСохраняемый Экспорт;&НаКлиенте// Служебная функция.Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)	Структура = Новый Структура;	Структура.Вставить("Снипет",Снипет);	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);	Структура.Вставить("Транзакция",Транзакция);	Структура.Вставить("Параметр",Параметр);	МассивТестов.Добавить(Структура);КонецФункции&НаКлиенте// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт	Ванесса = КонтекстФреймворкаBDD;		ВсеТесты = Новый Массив;	//описание параметров	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);	ДобавитьШагВМассивТестов(ВсеТесты,"ЯНахожусьВПоддерживаемойКонфигурации()","ЯНахожусьВПоддерживаемойКонфигурации","Допустим я нахожусь в поддерживаемой конфигурации");	ДобавитьШагВМассивТестов(ВсеТесты,"ЯЯОткрываюОбработку()","ЯЯОткрываюОбработку","Когда я я открываю обработку");	ДобавитьШагВМассивТестов(ВсеТесты,"НажимаюКнопку(Парам01)","НажимаюКнопку","И нажимаю кнопку ""Создать документ""");	ДобавитьШагВМассивТестов(ВсеТесты,"СоздаетсяДокумент()","СоздаетсяДокумент","Тогда создается документ");	Возврат ВсеТесты;КонецФункции	&НаСервере// Служебная функция.Функция ПолучитьМакетСервер(ИмяМакета)	ОбъектСервер = РеквизитФормыВЗначение("Объект");	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);КонецФункции	&НаКлиенте// Служебная функция для подключения библиотеки создания fixtures.Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт	Возврат ПолучитьМакетСервер(ИмяМакета);КонецФункции#КонецОбласти#Область Работа_со_сценариями&НаКлиенте// Процедура выполняется перед началом каждого сценарияПроцедура ПередНачаломСценария() Экспорт	КонецПроцедуры&НаКлиенте// Процедура выполняется перед окончанием каждого сценарияПроцедура ПередОкончаниемСценария() Экспорт	КонецПроцедуры#КонецОбласти/////////////////////////////////////////////////////Реализация шагов///////////////////////////////////////////////////&НаКлиенте//Допустим я нахожусь в поддерживаемой конфигурации//@ЯНахожусьВПоддерживаемойКонфигурации()Процедура ЯНахожусьВПоддерживаемойКонфигурации() Экспорт		ИмяТекущейКонфигурации = ПолучитьИмяКонфигурации();	ИмяПоддерживаемойКонфигурации = "ОперативныйУчет";		Ванесса.ПроверитьРавенство(ИмяТекущейКонфигурации, ИмяПоддерживаемойКонфигурации, "Это неподдерживаемая конфигурация");	КонецПроцедуры&НаСервереФункция ПолучитьИмяКонфигурации()	Возврат Метаданные.Имя;КонецФункции&НаКлиенте//Когда я я открываю обработку//@ЯЯОткрываюОбработку()Процедура ЯЯОткрываюОбработку() Экспорт	//Ванесса.ПосмотретьЗначение(Парам01,Истина);	ВызватьИсключение "Не реализовано.";КонецПроцедуры&НаКлиенте//И нажимаю кнопку "Создать документ"//@НажимаюКнопку(Парам01)Процедура НажимаюКнопку(Парам01) Экспорт	//Ванесса.ПосмотретьЗначение(Парам01,Истина);	ВызватьИсключение "Не реализовано.";КонецПроцедуры&НаКлиенте//Тогда создается документ//@СоздаетсяДокумент()Процедура СоздаетсяДокумент() Экспорт	//Ванесса.ПосмотретьЗначение(Парам01,Истина);	ВызватьИсключение "Не реализовано.";КонецПроцедуры//окончание текста модуля